{"version":3,"sources":["util/auth.js","util/requests.js","components/loading.js","components/error.js","styles/map-theme.js","components/map.js","components/sidebar.js","components/footer.js","components/app.js","components/main.js","util/serviceWorker.js","index.js"],"names":["G_KEY","CREDENTIALS","client_id","client_secret","VERSION","v","QUERY_PARAMS","near","query","Helper","endpoint","axios","get","this","getUrl","then","response","data","URLSearchParams","version","creds","concat","includes","Request","getResponse","id","Loading","react_default","a","createElement","className","Error","map_theme","featureType","elementType","stylers","visibility","color","hue","lightness","GoogleApiWrapper","apiKey","props","filterTerm","storeMarkers","google","markerDeactivate","mapCenter","markerInfoWindowShowing","onClickPlace","places","placeSelected","placeSelectedDetails","mapZoom","markers","filter","place","name","toLowerCase","indexOf","map","dist","animation","maps","Animation","DROP","key","onClick","bind","position","ref","disableDefaultUI","initialCenter","style","height","width","styles","theme","zoom","marker","onClose","visible","detail","location","placeName","placeAddress","address","placeCity","city","placeState","state","placePostalCode","postalCode","getInfo","undefined","filterList","listItems","thisMarker","find","onChange","event","target","value","placeholder","tabIndex","type","Footer","href","App","_Component","_getPrototypeOf2","_this","Object","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","filteredList","handleMarkerAnimation","animating","setAnimation","window","null","BOUNCE","markerActivate","setState","details","inherits","createClass","_this$props","role","components_sidebar","loading","components_footer","Component","Main","lat","lng","error","prevState","toConsumableArray","_this2","getPlaces","results","venues","objectSpread","catch","console","log","app","assign","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","main","document","getElementById","URL","process","origin","addEventListener","fetch","contentType","headers","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3242aa52.chunk.js","sourcesContent":["export const FS_ID = \"XATAV0HZ0MUVRNP2DMR4202KKJVBPO4PPHI21YNDSNKBSXUC\";\r\nexport const FS_SECRET = \"HTTEZQMQKMOGQXK1PWLOC3UTZI3HTWLULBMGZG5RY5T4UH1X\";\r\nexport const G_KEY = \"AIzaSyB_al7nqZ8PmQFuFB9WqcQPNKQQI_m6fs4\";","import { FS_ID, FS_SECRET } from \"./auth\";\r\nimport axios from \"axios\";\r\n\r\n// Static variable assignments\r\nconst QUERY_TERM = \"coffee\";\r\nconst QUERY_LOCATION = \"Oklahoma City\";\r\nconst QUERY_VERSION = \"20182507\";\r\nconst BASE_URL = \"https://api.foursquare.com/v2/venues/\";\r\n\r\n// Static objects for data fetch URL building\r\nconst CREDENTIALS = { client_id: FS_ID, client_secret: FS_SECRET };\r\nconst VERSION = { v: QUERY_VERSION };\r\nconst QUERY_PARAMS = { near: QUERY_LOCATION, query: QUERY_TERM };\r\n\r\n// Class containing the request function and URL builder\r\nclass Helper {\r\n  // Performs data fetch with given endpoint (either the default\r\n  // search parameters, or a specific place by its ID)\r\n  static async getResponse(endpoint) {\r\n    return await axios.get(this.getUrl(endpoint)).then(response => {\r\n      return response.data;\r\n    });\r\n  }\r\n\r\n  // Builds the URL for the data fetch\r\n  static getUrl(endpoint) {\r\n    // Destructure static variables into URL parameters\r\n    let query = new URLSearchParams(QUERY_PARAMS);\r\n    let version = new URLSearchParams(VERSION);\r\n    let creds = new URLSearchParams(CREDENTIALS);\r\n\r\n    // Send this back to getResponse() as the URL\r\n    return `${BASE_URL}${endpoint}${version}&${creds}${\r\n      // If the endpoint passed to getResponse() was \"search?\",\r\n      // then it came from getPlaces(). To do the default search,\r\n      // include the query parameters (\"near\" and \"query\").\r\n      // If the endpoint does not include \"search?\", then it came\r\n      // from getPlacesData() with an ID. To get details for\r\n      // a specific place, query parameters are not used.\r\n      endpoint.includes(\"search\") ? \"&\" + query : \"\"\r\n    }`;\r\n  }\r\n}\r\n\r\n// Class that will be called from a component\r\nexport default class Request {\r\n  // Retrieve default list of places\r\n  static getPlaces() {\r\n    return Helper.getResponse(\"search?\");\r\n  }\r\n\r\n  // Retrieve detailed information about a specific place\r\n  static getPlacesData(id) {\r\n    return Helper.getResponse(`${id}?`);\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <main className=\"interim\">\r\n      <h1>Loading...</h1>\r\n      <h3>Fetching data...</h3>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\n\r\nconst Error = () => {\r\n  return (\r\n    <main className=\"interim\">\r\n      <h1>Uh-oh!</h1>\r\n      <h3>There was a problem fetching the venue data.</h3>\r\n      <h3>Please check your internet connection, or try again later.</h3>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","export default [\r\n  {\r\n    featureType: \"landscape.natural\",\r\n    elementType: \"geometry.fill\",\r\n    stylers: [\r\n      {\r\n        visibility: \"on\"\r\n      },\r\n      {\r\n        color: \"#e0efef\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    featureType: \"poi\",\r\n    elementType: \"geometry.fill\",\r\n    stylers: [\r\n      {\r\n        visibility: \"on\"\r\n      },\r\n      {\r\n        hue: \"#1900ff\"\r\n      },\r\n      {\r\n        color: \"#c0e8e8\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    featureType: \"road\",\r\n    elementType: \"geometry\",\r\n    stylers: [\r\n      {\r\n        lightness: 100\r\n      },\r\n      {\r\n        visibility: \"simplified\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    featureType: \"road\",\r\n    elementType: \"labels\",\r\n    stylers: [\r\n      {\r\n        visibility: \"off\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    featureType: \"transit.line\",\r\n    elementType: \"geometry\",\r\n    stylers: [\r\n      {\r\n        visibility: \"on\"\r\n      },\r\n      {\r\n        lightness: 700\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    featureType: \"water\",\r\n    elementType: \"all\",\r\n    stylers: [\r\n      {\r\n        color: \"#7dcdcd\"\r\n      }\r\n    ]\r\n  }\r\n];\r\n","import React from \"react\";\r\nimport { Map, Marker, InfoWindow, GoogleApiWrapper } from \"google-maps-react\";\r\nimport { G_KEY } from \"../util/auth.js\";\r\nimport theme from \"../styles/map-theme\";\r\n\r\nconst MapContainer = props => {\r\n  const {\r\n    filterTerm,\r\n    storeMarkers,\r\n    google,\r\n    markerDeactivate,\r\n    mapCenter,\r\n    markerInfoWindowShowing,\r\n    onClickPlace,\r\n    places,\r\n    placeSelected,\r\n    placeSelectedDetails,\r\n    mapZoom\r\n  } = props;\r\n\r\n  // Generate the markers based on user's input in the \"Filter\" box\r\n  const markers = places\r\n    .filter(\r\n      place => place.name.toLowerCase().indexOf(filterTerm.toLowerCase()) >= 0\r\n    )\r\n    .map(place => {\r\n      return (\r\n        <Marker\r\n          animation={google.maps.Animation.DROP}\r\n          id={place.id}\r\n          key={place.id}\r\n          name={place.name}\r\n          onClick={onClickPlace.bind(place)}\r\n          position={place.position}\r\n          ref={storeMarkers}\r\n        />\r\n      );\r\n    });\r\n\r\n  function getInfo(detail) {\r\n    let place = detail.location;\r\n    let placeName = detail.name;\r\n    let placeAddress = place.address ? place.address : \"(No address listed)\";\r\n    let placeCity = place.city ? place.city : \"(No city listed)\";\r\n    let placeState = place.state ? place.state : \"(No state listed)\";\r\n    let placePostalCode = place.postalCode ? place.postalCode : \"\";\r\n\r\n    return (\r\n      <div>\r\n        <h3>{placeName}</h3>\r\n        <p>{placeAddress}</p>\r\n        <p>\r\n          {placeCity}, {placeState} {placePostalCode}\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Map\r\n      disableDefaultUI={true}\r\n      google={google}\r\n      initialCenter={mapCenter}\r\n      onClick={markerDeactivate.bind(this)}\r\n      style={{\r\n        height: \"100%\",\r\n        width: \"100%\"\r\n      }}\r\n      styles={theme}\r\n      zoom={mapZoom}\r\n    >\r\n      {markers}\r\n      <InfoWindow\r\n        marker={placeSelected}\r\n        onClose={markerDeactivate}\r\n        visible={markerInfoWindowShowing}\r\n      >\r\n        <section>\r\n          {placeSelectedDetails ? getInfo(placeSelectedDetails) : undefined}\r\n        </section>\r\n      </InfoWindow>\r\n    </Map>\r\n  );\r\n};\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: G_KEY\r\n})(MapContainer);\r\n","import React from \"react\";\r\nimport { GoogleApiWrapper } from \"google-maps-react\";\r\nimport { G_KEY } from \"../util/auth.js\";\r\nimport \"../styles/css/sidebar.css\";\r\n\r\nexport const Sidebar = props => {\r\n  const { filterList, filterTerm, markers, onClickPlace, places } = props;\r\n\r\n  // Render the list of places only if the markerList array has been populated.\r\n  // The list is dependent upon the MapContainer component completing to store\r\n  // the markers. Because of that, the first state of this component is rendered\r\n  // with an empty \"markerList\" array, which makes it more difficult to marry\r\n  // the list items with their respective markers.\r\n  const listItems = places\r\n    .filter(\r\n      place => place.name.toLowerCase().indexOf(filterTerm.toLowerCase()) >= 0\r\n    )\r\n    .map(place => {\r\n      let thisMarker = markers.find(marker => place.id === marker.props.id);\r\n      return (\r\n        <li\r\n          className=\"place\"\r\n          key={place.id}\r\n          onClick={onClickPlace.bind(this, thisMarker.props, thisMarker.marker)}\r\n        >\r\n          {place.name}\r\n        </li>\r\n      );\r\n    });\r\n\r\n  return (\r\n    <aside>\r\n      <input\r\n        className=\"input-filter\"\r\n        onChange={event => filterList(event.target.value)}\r\n        placeholder=\"Filter\"\r\n        tabIndex={0}\r\n        type=\"text\"\r\n        value={filterTerm}\r\n      />\r\n      <ul tabIndex={0}>{listItems}</ul>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: G_KEY\r\n})(Sidebar);\r\n","// @Author:             Ryan Delk\r\n// @Date:               2018-11-25 14:12:49\r\n// @Last Modified by:   Ryan Delk\r\n// @Last Modified time: 2018-11-25 14:12:49\r\n\r\nimport React from \"react\";\r\nimport \"../styles/css/footer.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <h4>\r\n        Powered by <a href=\"https://developer.foursquare.com\">Foursquare</a>\r\n      </h4>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport { GoogleApiWrapper } from \"google-maps-react\";\r\nimport { G_KEY } from \"../util/auth.js\";\r\nimport \"../styles/css/layout.css\";\r\nimport MapContainer from \"./map\";\r\nimport Sidebar from \"./sidebar\";\r\nimport Loading from \"./loading\";\r\nimport Footer from \"./footer\";\r\n\r\nexport class App extends Component {\r\n  state = {\r\n    filterTerm: \"\",\r\n    filteredList: [],\r\n    markerInfoWindowShowing: undefined,\r\n    placeSelected: undefined,\r\n    placeSelectedDetails: undefined\r\n  };\r\n\r\n  handleMarkerAnimation = () => {\r\n    // If there is no place selected (meaning there is no active marker)\r\n    if (!this.state.placeSelected) {\r\n      // If there is still a marker bouncing\r\n      // This will be true if a marker has recently been deactivated. Its\r\n      // animation will still be set to true, so it needs to be turned off.\r\n      if (this.props.markers.find(marker => marker.marker.animating === true)) {\r\n        // If this is the case, find the marker and set its animation to null\r\n        this.props.markers\r\n          .find(marker => marker.marker.animating === true)\r\n          .marker.setAnimation(window.google.maps.Animation.null);\r\n      }\r\n    } else {\r\n      // Otherwise, there will be an active marker somewhere\r\n      // If there is a marker bouncing\r\n      // This will be true if a marker was already active but a different place\r\n      // was selected\r\n      if (this.props.markers.find(marker => marker.marker.animating === true)) {\r\n        // Find the marker that is bouncing and set its animation to null\r\n        this.props.markers\r\n          .find(marker => marker.marker.animating === true)\r\n          .marker.setAnimation(window.google.maps.Animation.null);\r\n        // Find the new active place and make its marker bounce\r\n        this.state.placeSelected.setAnimation(\r\n          window.google.maps.Animation.BOUNCE\r\n        );\r\n      } else {\r\n        // Otherwise, a place will be selected for the first time.\r\n        // Make that place's marker bounce\r\n        this.state.placeSelected.setAnimation(\r\n          window.google.maps.Animation.BOUNCE\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  markerActivate = (props, marker) => {\r\n    // Open the place's info window, set it as selected\r\n    this.setState(\r\n      {\r\n        markerInfoWindowShowing: true,\r\n        placeSelected: marker,\r\n        placeSelectedDetails: props\r\n      },\r\n      // Callback - after the place has been selected, determine\r\n      // how its animation should be handled. Used as a callback\r\n      // because this depends on the updated state.\r\n      () => this.handleMarkerAnimation()\r\n    );\r\n  };\r\n\r\n  markerDeactivate = () => {\r\n    // Close the info window, deselect the place\r\n    this.setState(\r\n      {\r\n        markerInfoWindowShowing: undefined,\r\n        placeSelected: undefined,\r\n        placeSelectedDetails: undefined\r\n      },\r\n      // Callback - after the place has been deselected, determine\r\n      // how its animation should be handled. Used as a callback\r\n      // because this depends on the updated state.\r\n      () => this.handleMarkerAnimation()\r\n    );\r\n  };\r\n\r\n  onClickPlace = (props, marker) => {\r\n    // Search the \"places\" props for the Foursquare venue that has\r\n    // the same id as the marker/list item selected.\r\n    let details = this.props.places.find(place => props.id === place.id);\r\n\r\n    // Clicking the already active place will deactivate it.\r\n    // Otherwise, select this place and activate its marker.\r\n    this.state.placeSelected === marker\r\n      ? this.markerDeactivate()\r\n      : this.markerActivate(details, marker);\r\n  };\r\n\r\n  filterList = filterTerm => {\r\n    // Update the filter term based on user input and subsequently\r\n    // write the remaining places to a new array.\r\n    this.setState(\r\n      {\r\n        filterTerm: filterTerm,\r\n        filteredList: this.props.places.filter(place => {\r\n          return (\r\n            place.name.toLowerCase().indexOf(filterTerm.toLowerCase()) >= 0\r\n          );\r\n        })\r\n      },\r\n      // Callback - after the list has been filtered, check if there is an\r\n      // active place. If so, find out if it is in the newly filtered\r\n      // list. If not, deselect the place and deactivate its marker.\r\n      () => {\r\n        if (this.state.placeSelected) {\r\n          if (\r\n            !this.state.filteredList\r\n              .map(place => place.id)\r\n              .includes(this.state.placeSelected.id)\r\n          ) {\r\n            this.markerDeactivate();\r\n          }\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { mapCenter, mapZoom, markers, places, storeMarkers } = this.props;\r\n\r\n    if (!places) {\r\n      return <Loading />;\r\n    } else {\r\n      return (\r\n        <div role=\"application\" className=\"app\">\r\n          <main className=\"container\" role=\"application\">\r\n            {markers.length > 0 ? (\r\n              <div className=\"sidebar\">\r\n                <Sidebar\r\n                  filterList={this.filterList.bind(this)}\r\n                  filterTerm={this.state.filterTerm}\r\n                  markers={markers}\r\n                  onClickPlace={this.onClickPlace}\r\n                  places={places}\r\n                  placeSelected={this.state.placeSelected}\r\n                />\r\n              </div>\r\n            ) : (\r\n              <div className=\"sidebar\">\r\n                <Loading />\r\n              </div>\r\n            )}\r\n            <div className=\"map\">\r\n              <MapContainer\r\n                filteredList={this.state.filteredList}\r\n                filterTerm={this.state.filterTerm}\r\n                mapCenter={mapCenter}\r\n                mapZoom={mapZoom}\r\n                markerActivate={this.markerActivate}\r\n                markerDeactivate={this.markerDeactivate}\r\n                markerInfoWindowShowing={this.state.markerInfoWindowShowing}\r\n                markers={markers}\r\n                onClickPlace={this.onClickPlace}\r\n                placeSelected={this.state.placeSelected}\r\n                placeSelectedDetails={this.state.placeSelectedDetails}\r\n                places={places}\r\n                storeMarkers={storeMarkers}\r\n              />\r\n            </div>\r\n          </main>\r\n          <Footer />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: G_KEY\r\n})(App);\r\n","import React, { Component } from \"react\";\r\nimport { GoogleApiWrapper } from \"google-maps-react\";\r\nimport { G_KEY } from \"../util/auth.js\";\r\nimport Request from \"../util/requests\";\r\nimport Loading from \"./loading\";\r\nimport Error from \"./error\";\r\nimport App from \"./app\";\r\n\r\nexport class Main extends Component {\r\n  state = {\r\n    places: [],\r\n    markers: [],\r\n    mapCenter: {\r\n      lat: 35.465076,\r\n      lng: -97.507373\r\n    },\r\n    mapZoom: 12,\r\n    error: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    Request.getPlaces()\r\n      .then(results => {\r\n        this.setState({\r\n          places: results.response.venues.map(place => {\r\n            return {\r\n              ...place,\r\n              position: {\r\n                lat: place.location.lat,\r\n                lng: place.location.lng\r\n              }\r\n            };\r\n          })\r\n        });\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          error: true\r\n        });\r\n        console.log(\r\n          \"Error setting initial state in componentDidMount() [app.js]\"\r\n        );\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  storeMarkers = marker => {\r\n    // Add the markers to the state array only if the array is empty (meaning\r\n    // this hasn't been done yet). Without the conditional, using the filter\r\n    // and then clearing it will add extra copies of the markers to the array.\r\n    if (this.state.markers.length === 0) {\r\n      this.setState(prevState => ({\r\n        markers: [...prevState.markers, marker]\r\n      }));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (this.state.places.length === 0 && this.state.error === false) {\r\n      // Don't render the component until the data has been fetched\r\n      return <Loading />;\r\n    } else if (this.state.error === true) {\r\n      return <Error />;\r\n    } else {\r\n      // When the data is ready, render App and pass the places down as props\r\n      return <App storeMarkers={this.storeMarkers} {...this.state} />;\r\n    }\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: G_KEY\r\n})(Main);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./styles/css/index.css\";\r\nimport Main from \"./components/main\";\r\nimport * as serviceWorker from \"./util/serviceWorker\";\r\n\r\nReactDOM.render(<Main />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}